define({ "api": [  {    "type": "post",    "url": "/book",    "title": "Save book information",    "name": "createBook",    "group": "Book",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "author",            "description": "<p>Name of the author.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of the book.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Generated Book ID</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"book_id\": 123\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Invalid",            "description": "<p>Provided input didn't match the validation</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n     \"errors\": [\n         {\n             \"location\": \"body\",\n             \"param\": \"author\",\n             \"value\": \"Maria$$$\",\n             \"msg\": \"Invalid value\"\n         }\n     ]\n }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Book"  },  {    "type": "get",    "url": "/book/:book_id",    "title": "Get book's information",    "name": "getBook",    "group": "Book",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Book ID of the book.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Generated Book ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "author",            "description": "<p>Name of the author</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of the book</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"result\": {\n         \"book_id\": 43,\n         \"author\": \"Test\",\n         \"title\": \"Test\",\n         \"created_at\": \"Sat, 20 Oct 2018 04:56:06 GMT\"\n     }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BookNotFound",            "description": "<p>Book wasn't found</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"Error\": \"No records found for the specified book.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Book"  },  {    "type": "post",    "url": "/user/:user_id/book/:book_id",    "title": "Add a book to user's library",    "name": "addBookToUserLibrary",    "group": "Library",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User ID of the user that wants to add a book.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Book ID of the book that needs to be added to the user's collection.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_library_id",            "description": "<p>Generated ID for user's library entry</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user_library_id\": 12\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BookAlreadyIssued",            "description": "<p>The book is already taken by a user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n     \"Error\": \"The book is already issued to a user.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Library"  },  {    "type": "delete",    "url": "/user/:user_id/book/:book_id",    "title": "Delete a book from user's library",    "name": "deleteBookFromUserLibrary",    "group": "Library",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User ID of the user for which the book needs to be deleted.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Book ID of the book that needs to be deleted from the user's collection.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Record successfully deleted.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "EntryNotFound",            "description": "<p>The book entry for the user doesn't exist in the library</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"Error\": \"Library entry not found.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Library"  },  {    "type": "get",    "url": "/user/:user_id/books?filter=read",    "title": "Get user's books from the Library",    "name": "getUserBooks",    "group": "Library",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User ID of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": "<p>Optional queryparam returns user's library collection by books read, unread and by authors. filter=read - Returns only read books, filter=unread - Returns only unread books, filter=author - Returns unique author books.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Book ID of the book</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "author",            "description": "<p>Author of the book</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of the book</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"books\": [\n         {\n             \"book_id\": 2,\n             \"author\": \"J.K.Rowling\",\n             \"title\": \"Harry Potter\"\n         },\n         {\n             \"book_id\": 12,\n             \"author\": \"Dan Brown\",\n             \"title\": \"The Lost Symbol\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecordsFound",            "description": "<p>User doesn't have any books in the library</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"Error\": \"No Records found for the user in library.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Library"  },  {    "type": "put",    "url": "/user/:user_id/book/:book_id/operation/:mark_as_read",    "title": "Mark a book as read or unread from user's library",    "name": "updateBookReadStatus",    "group": "Library",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User ID of the user who has issued the book</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "book_id",            "description": "<p>Book ID of the issued book</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "mark_as_read",            "description": "<p>0 - Mark as Unread, 1 - Mark as Read</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Record successfully updated.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "EntryNotFound",            "description": "<p>The book entry for the user doesn't exist in the library</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"Error\": \"Library entry not found.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "Library"  },  {    "type": "post",    "url": "/user",    "title": "Save user information",    "name": "createUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>Generated User ID</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user_id\": 123\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Invalid",            "description": "<p>Provided input didn't match the validation</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n     \"errors\": [\n         {\n             \"location\": \"body\",\n             \"param\": \"first_name\",\n             \"value\": \"Maria$$$\",\n             \"msg\": \"Invalid value\"\n         }\n     ]\n }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:user_id",    "title": "Get user's information",    "name": "getUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User ID of the user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>Generated User ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Randomly generated unique username</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"result\": {\n         \"user_id\": 43,\n         \"username\": \"Random29l9b4eppjngz0743\",\n         \"first_name\": \"Random\",\n         \"last_name\": \"Name\",\n         \"created_at\": \"Sat, 20 Oct 2018 04:56:06 GMT\"\n     }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>User wasn't found</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"Error\": \"No records found for the specified user.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes.js",    "groupTitle": "User"  }] });
